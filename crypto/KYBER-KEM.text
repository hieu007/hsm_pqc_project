               +--------------------+
               |    KeyGen()        |
               |--------------------|
               | - Sinh kh√≥a b√≠ m·∫≠t |
               | - Sinh kh√≥a c√¥ng khai|
               +--------------------+
                         |
             (PublicKey, SecretKey)
                         ‚Üì
                  +--------------+
                  | Encaps(PK)   |
                  |--------------|
                  | - Sinh kh√≥a ƒë·ªëi x·ª©ng K  |
                  | - T·∫°o ciphertext (CT)   |
                  +--------------+
                         |
              (Ciphertext, Shared key K)
                         ‚Üì
                  +--------------+
                  | Decaps(SK, CT)|
                  |--------------|
                  | - Gi·∫£i m√£ CT ƒë·ªÉ |
                  |   l·∫•y l·∫°i K     |
                  +--------------+
1. Key Generation (KeyGen)

- T·∫°o ra m·ªôt kh√≥a c√¥ng khai (pk) v√† kh√≥a b√≠ m·∫≠t (sk).

- D·ª±a tr√™n Module-LWE, sinh ma tr·∫≠n ng·∫´u nhi√™n, th·ª±c hi·ªán ph√©p nh√¢n ma tr·∫≠n v√† th√™m nhi·ªÖu Gaussian.

2. Encapsulation (Encaps)

- D√πng pk ƒë·ªÉ m√£ h√≥a m·ªôt th√¥ng ƒëi·ªáp b√≠ m·∫≠t ‚Üí t·∫°o ra ciphertext (ct).

- ƒê·ªìng th·ªùi sinh ra kh√≥a ƒë·ªëi x·ª©ng d√πng chung (shared secret K).

3. Decapsulation (Decaps)

D√πng sk ƒë·ªÉ gi·∫£i m√£ ct, kh√¥i ph·ª•c l·∫°i kh√≥a ƒë·ªëi x·ª©ng K gi·ªëng b√™n g·ª≠i.
Note: Thu·∫≠t to√°n Kyber ch·ªëng l·∫°i t·∫•n c√¥ng l∆∞·ª£ng t·ª≠ l√† v√¨ n√≥ kh√¥ng d·ª±a tr√™n c√°c b√†i to√°n to√°n h·ªçc m√† m√°y t√≠nh l∆∞·ª£ng t·ª≠ c√≥ th·ªÉ gi·∫£i hi·ªáu qu·∫£, nh∆∞ RSA hay ECC, m√† d·ª±a tr√™n b√†i to√°n Lattice (m·∫°ng r·ªùi r·∫°c) ‚Äî c·ª• th·ªÉ l√† Module-LWE (Learning With Errors).
1. Kh√¥ng d·ª±a tr√™n ph√¢n t√≠ch nguy√™n t·ªë hay logarit r·ªùi r·∫°c:
-C√°c thu·∫≠t to√°n nh∆∞ RSA, Diffie-Hellman hay ECC c√≥ th·ªÉ b·ªã ph√° b·ªüi thu·∫≠t to√°n Shor tr√™n m√°y t√≠nh l∆∞·ª£ng t·ª≠ ‚Üí th·ªùi gian gi·∫£i b√†i to√°n logarit r·ªùi r·∫°c tr·ªü th√†nh ƒëa th·ª©c.
2. D·ª±a tr√™n b√†i to√°n m·∫°ng (Lattice Problem):
Kyber d·ª±a v√†o Module-LWE, m·ªôt bi·∫øn th·ªÉ c·ªßa Learning With Errors (LWE), v·ªën ƒë∆∞·ª£c ch·ª©ng minh l√† kh√≥ gi·∫£i ngay c·∫£ v·ªõi m√°y t√≠nh l∆∞·ª£ng t·ª≠.
-Ch∆∞a c√≥ thu·∫≠t to√°n l∆∞·ª£ng t·ª≠ n√†o gi·∫£i ƒë∆∞·ª£c Module-LWE trong th·ªùi gian hi·ªáu qu·∫£.
-Nhi·ªÖu (Error) l√†m tƒÉng ƒë·ªô kh√≥:
3. Vi·ªác th√™m nhi·ªÖu v√†o c√°c ph√©p nh√¢n trong Module-LWE khi·∫øn b√†i to√°n c√†ng kh√≥ h∆°n cho b·∫•t k·ª≥ thu·∫≠t to√°n n√†o (k·ªÉ c·∫£ l∆∞·ª£ng t·ª≠).
III. So s√°nh v·ªõi RSA/ECC
| Ti√™u ch√≠                     | **Kyber**                         | **RSA**                           | **ECC**                                  |
| ---------------------------- | --------------------------------- | --------------------------------- | ---------------------------------------- |
| **Kh√°ng l∆∞·ª£ng t·ª≠**           | ‚úÖ An to√†n tr∆∞·ªõc t·∫•n c√¥ng l∆∞·ª£ng t·ª≠ | ‚ùå B·ªã ph√° b·ªüi thu·∫≠t to√°n Shor      | ‚ùå B·ªã ph√° b·ªüi thu·∫≠t to√°n Shor             |
| **C∆° s·ªü to√°n h·ªçc**           | B√†i to√°n m·∫°ng (Module-LWE)        | Ph√¢n t√≠ch s·ªë nguy√™n t·ªë l·ªõn        | Logarit r·ªùi r·∫°c tr√™n ƒë∆∞·ªùng cong elliptic |
| **K√≠ch th∆∞·ªõc kh√≥a**          | üîë Nh·ªè h∆°n RSA, l·ªõn h∆°n ECC       | üîë R·∫•t l·ªõn (‚â•2048 bit)            | üîë Nh·ªè (‚âà256 bit)                        |
| **Hi·ªáu su·∫•t m√£ h√≥a/gi·∫£i m√£** | ‚è±Ô∏è Nhanh h∆°n RSA                  | ‚è±Ô∏è Ch·∫≠m h∆°n Kyber                 | ‚è±Ô∏è Nhanh h∆°n RSA, nh∆∞ng ch·∫≠m h∆°n Kyber   |
| **Ti√™u chu·∫©n h√≥a**           | ‚úÖ ƒê∆∞·ª£c NIST ch·ªçn (Kyber-1024)     | ‚úÖ C≈©, kh√¥ng an to√†n h·∫≠u l∆∞·ª£ng t·ª≠  | ‚úÖ C≈©, kh√¥ng an to√†n h·∫≠u l∆∞·ª£ng t·ª≠         |
| **·ª®ng d·ª•ng t∆∞∆°ng lai**       | M√£ h√≥a h·∫≠u l∆∞·ª£ng t·ª≠, IoT, VPN,... | Gi·∫£m d·∫ßn, kh√¥ng khuy·∫øn kh√≠ch d√πng | Gi·∫£m d·∫ßn, kh√¥ng khuy·∫øn kh√≠ch d√πng        |
