echo "üöÄ Ki·ªÉm th·ª≠ truy c·∫≠p kh√≥a PQC qua pkcs11 URI..."

# T·∫°o file c·∫•u h√¨nh engine n·∫øu c·∫ßn
cat <<EOF > openssl-pkcs11.cnf
openssl_conf = openssl_init

[openssl_init]
engines = engine_section

[engine_section]
pkcs11 = pkcs11_section

[pkcs11_section]
engine_id = pkcs11
dynamic_path = /usr/lib/x86_64-linux-gnu/engines-3/pkcs11.so
MODULE_PATH = /usr/lib/softhsm/libsofthsm2.so
init = 0
EOF

# Set bi·∫øn m√¥i tr∆∞·ªùng ƒë·ªÉ d√πng config
export OPENSSL_CONF=$(pwd)/openssl-pkcs11.cnf

# T·∫°o CSR qua pkcs11 (gi·∫£ s·ª≠ ƒë√£ c√≥ key "mykey" l∆∞u trong token)
# ƒê√¢y l√† b∆∞·ªõc m√¥ ph·ªèng. N·∫øu b·∫°n ƒë√£ l∆∞u kh√≥a v√†o token, h√£y d√πng d√≤ng sau:
# openssl req -engine pkcs11 -new -key "pkcs11:token=PQC-TOKEN;object=mykey;type=private" \
#   -keyform engine -out test_pqc_pkcs11.csr

echo "‚ùó Ch√∫ √Ω: ƒê√¢y l√† test gi·∫£ l·∫≠p, ch∆∞a ghi kh√≥a th·ª±c s·ª± v√†o token."
echo "‚úÖ N·∫øu b·∫°n c√≥ c√¥ng c·ª• ƒë·ªÉ import key v√†o HSM, h√£y s·ª≠a ph·∫ßn pkcs11:token=..."

echo "üéâ Ki·ªÉm th·ª≠ pkcs11 ho√†n t·∫•t (m·ª©c c·∫•u h√¨nh)."
